---
---
<div class="min-h-screen bg-gray-100 flex items-center justify-center">
  <div class="max-w-md w-full bg-white rounded-lg shadow-md p-8">
    <h2 class="text-2xl font-bold mb-6 text-center">Login</h2>
    <div id="error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"></div>
    <form id="login-form">
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="email">
          Email
        </label>
        <input
          type="email"
          id="email"
          class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          required
        />
      </div>
      <div class="mb-6">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
          Password
        </label>
        <input
          type="password"
          id="password"
          class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          required
        />
      </div>
      <button
        type="submit"
        class="w-full bg-blue-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
      >
        Sign In
      </button>
    </form>
  </div>
</div>

<script>
  const form = document.getElementById('login-form');
  const errorMessage = document.getElementById('error-message');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (errorMessage) errorMessage.classList.add('hidden');

    const email = (document.getElementById('email') as HTMLInputElement)?.value;
    const password = (document.getElementById('password') as HTMLInputElement)?.value;

    try {
      const response = await fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password }),
      });

      if (!response.ok) throw new Error('Invalid credentials');

      const { user, token } = await response.json();
      
      // Store auth data in cookies
      document.cookie = `token=${token}; path=/`;
      document.cookie = `user=${JSON.stringify(user)}; path=/`;
      
      // Redirect based on role
      window.location.href = `/${user.role}/dashboard`;
    } catch (err) {
      if (errorMessage) {
        errorMessage.classList.remove('hidden');
        errorMessage.textContent = 'Invalid email or password';
      }
    }
  });
</script>